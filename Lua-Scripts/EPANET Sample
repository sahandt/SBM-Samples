local function HCTankVolume( liquidHeight, tankLength, tankRadius)
   return tankLength *( tankRadius*tankRadius* math.acos(( tankRadius-liquidHeight)/tankRadius)-( tankRadius-liquidHeight)* math.sqrt(2*tankRadius*liquidHeight-liquidHeight*liquidHeight)) 
end 

local function AddHCTankVolumeCurve (id, tankLength, tankRadius, N)
   ENaddcurve(id)
   local curveIndex = ENgetcurveindex(id)
   ENsetcurvevalue( curveIndex, 1, 0, 0) 
   local i = 2
   local h=0
     while i<=N do
          h =  tankRadius*2*i/N
          ENsetcurvevalue( curveIndex, i,h , HCTankVolume( h, tankLength, tankRadius)) 
      i = i + 1
     end
   return curveIndex
end

local function AddPumpCurve (id, maxFlow, CurveFormula, N)
   ENaddcurve(id)
   local curveIndex = ENgetcurveindex(id)
   local i = 1
   local f=0
     while i<=N do
          f =   maxFlow*i/N
          ENsetcurvevalue( curveIndex, i,f ,ParseMathExpression(CurveFormula,"x",f)) 
      i = i + 1
     end
   return curveIndex
end


local now = GetDateTimeNow("yy mm dd hh mm")

local N= 10
local t= 1
local P={}
local nnodes=1
local sourceindex=-1
local tstep =1
local index=-1

local Rptfilename = "Report "..now..".rpt"
local Outfilename = "Output "..now..".out"

ENopen("test.inp", Rptfilename, Outfilename)
ENinit("", "", EN_C( "EN_CMH"), EN_C( "EN_DW"))
ENsettitle("EPANET Model for "..GetProjectProperty("NAME") , "Created on "..now, "Scripted by Sahand Tashak")
local duration = 6*60*60
local hydstep = 1*60*60
ENsettimeparam(EN_C("EN_DURATION"), duration)
ENsettimeparam(EN_C("EN_HYDSTEP"), hydstep)

MaterialAddtoCollection("water", "L1430")
MaterialAddtoCollection("sysLiq", GetSystemLiquidID("Liquid distribution system"))
print("System liquid is:"..MaterialGetProperty("sysLiq","NAME"))
local liqDensity = MaterialGetProperty("sysLiq","DENSIT_AT_T")
local liqVisc = MaterialGetProperty("sysLiq","DYNAMIC_VISCOSITY_AT_T")

local waterDensity = MaterialGetProperty("water","DENSIT_AT_T")
local waterVisc = MaterialGetProperty("water","DYNAMIC_VISCOSITY_AT_T")

local specGravity = liqDensity/waterDensity
local specVisco = liqVisc/waterVisc;
print("specific Gravity : "..specGravity )
print("specific Viscosity : "..specVisco )

ENsetoption(EN_C("EN_SP_GRAVITY"),specGravity )  
ENsetoption(EN_C("EN_SP_VISCOS"), specVisco )  

CheckDuplicate(true)
local ele_tbl= GetAllElements()
local tag = ""
local type= ""
local xp = 0
local yp = 0
local zp =0

for i,ele in ipairs(ele_tbl) do
      for j,props in ipairs(ele) do
           if props[1]=="Type" then
             type = props[2]
           end
           if props[1]=="Tag" then
             tag = props[2]
           end
           if props[1]=="PosX" then
              xp = props[2]
           end
           if props[1]=="PosY" then
              yp = props[2]
           end
           if props[1]=="PosZ" then
              zp = props[2]
           end
      end

       if type=="PIPE_FITTING" then
            index = ENaddnode(tag,EN_C("EN_JUNCTION"))
            ENsetjuncdata( index, zp, 0, "")
            ENsetcoord(index, yp,xp)
            if tag=="D1" then
                ENsetnodevalue( index, EN_C("EN_BASEDEMAND"), 10) 
            end
            if tag=="D2" then
                ENsetnodevalue( index, EN_C("EN_BASEDEMAND"), 20) 
            end
       end

            if type=="VCYL_AS_TANK" then
            index = ENaddnode(tag,EN_C("EN_TANK"))
            local outsidediam= GetProperty(tag,"TANK_DIA")
            local wallthickness = GetProperty(tag,"TANK_WT")
            local diam = outsidediam-2*wallthickness
            local initlvl = GetProperty(tag,"INIT_LIQ_ELEV")
            local minlvl = GetProperty(tag,"MIN_LIQ_ELEV")
            local maxlvl = GetProperty(tag,"MAX_LIQ_ELEV")
            ENsettankdata(index, zp, initlvl,  minlvl, maxlvl, diam, 0, "")
            ENsetcoord(index, yp,xp)
            end

            if type=="RECT_AS_TANK" then
            index = ENaddnode(tag,EN_C("EN_TANK"))
            local wallthickness = GetProperty(tag,"TANK_WT")
            local tanklength = GetProperty(tag,"TANK_LENGTH")-2*wallthickness
            local tankwidth = GetProperty(tag,"TANK_WIDTH")-2*wallthickness
            local diam =  2* math.sqrt(tanklength*  tankwidth/math.pi)
            local initlvl = GetProperty(tag,"INIT_LIQ_ELEV")
            local minlvl = GetProperty(tag,"MIN_LIQ_ELEV")
            local maxlvl = GetProperty(tag,"MAX_LIQ_ELEV")
            ENsettankdata(index, zp, initlvl,  minlvl, maxlvl, diam, 0, "")
            ENsetcoord(index, yp,xp)
            end

            if type=="HCYL_AS_TANK" then
            index = ENaddnode(tag,EN_C("EN_TANK"))
            local outsidediam= GetProperty(tag,"TANK_DIA")
            local wallthickness = GetProperty(tag,"TANK_WT")
            local diam = outsidediam-2*wallthickness
            local  tankLength = GetProperty(tag,"TANK_LENGTH")
            local initlvl = GetProperty(tag,"INIT_LIQ_ELEV")
            local minlvl = GetProperty(tag,"MIN_LIQ_ELEV")
            local maxlvl = GetProperty(tag,"MAX_LIQ_ELEV")
            local minvol =HCTankVolume( minlvl , tankLength, diam/2)
            local id = tag.."volume_curve"
            AddHCTankVolumeCurve(id, tankLength, diam/2, 20)
            ENsettankdata(index, zp-diam/2, initlvl,  minlvl, maxlvl, 0,minvol , id)
            ENsetcoord(index, yp,xp)
            end
end

for i,ele in ipairs(ele_tbl) do
      for j,props in ipairs(ele) do
           if props[1]=="Type" then
             type = props[2]
           end
           if props[1]=="Tag" then
             tag = props[2]
           end
           if props[1]=="PosX" then
              xp = props[2]
           end
           if props[1]=="PosY" then
              yp = props[2]
           end
           if props[1]=="PosZ" then
              zp = props[2]
           end
      end

       if type=="PIPE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_PIPE"), node1tag, node2tag);
           ENsetpipedata(index, pipelength, pipeid, DWrghns, 0);
       end


     if type=="FCVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_FCV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

     if type=="GPVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_GPV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

     if type=="TCVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_TCV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

     if type=="PRVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_PRV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

     if type=="PSVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_PSV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

     if type=="PBVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_PBV"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end


     if type=="CHVALVE" then
            local pipelength = GetProperty(tag,"PIPE_LENGTH")
            local pipeod = GetProperty(tag,"OUTSIDE_DIAM")
            local pipethk = GetProperty(tag,"WALL_THICKNESS")
            local DWrghns = GetProperty(tag,"D_W_RELATIVE_ROUGHNESS")*1000
            local pipeid= (pipeod-2*pipethk)*1000;
            local nodes = GetLinkNodes(tag);
            local node1tag = nodes[1]
            local node2tag = nodes[2]
            index= ENaddlink(tag, EN_C( "EN_CVPIPE"), node1tag, node2tag);
            ENsetpipedata(index, pipelength, pipeid,  DWrghns, 0);
       end

       if type=="PIPE_FITTING" then
            local isNozzle= GetProperty(tag,"LOCK_2_PARENT" )
            if isNozzle then
                local parentTag= GetParentTag(tag)
                if IsTank(parentTag) then
                    local nozzlelength = GetProperty(tag,"NOZZLE_LENGTH" )
                    local nozzleod = GetProperty(tag,"OUTSIDE_DIAM")
                    local nozzlethk = GetProperty(tag,"WALL_THICKNESS")
                    local nozzleid= (nozzleod-2*nozzlethk)*1000;
                    local nozzlepipetag = tag.."_NZL_PIPE"
                    index= ENaddlink(nozzlepipetag, EN_C( "EN_PIPE"), tag, parentTag);
                    ENsetpipedata(index, nozzlelength, nozzleid, 0.046, 0);
                end
           end 
       end
       if type=="CENTR_PUMP" then
           local childrentable = GetChildrenInfo(tag);
           local childtag = ""
           local childtype= ""
           local inlet = ""
           local outlet = ""
           for i,ele in ipairs(childrentable) do
                for j,props in ipairs(ele) do
                   if props[1]=="Type" then
                       childtype = props[2]
                   end
                   if props[1]=="Tag" then
                     childtag = props[2]
                   end
              end
              if childtype=="PIPE_FITTING" then
                  if inlet == "" then
                       inlet = childtag
                  else
                       outlet = childtag 
                  end
              end
            end
          if inlet ~="" and outlet ~= "" then
              index= ENaddlink( tag, EN_C( "EN_PUMP"), inlet, outlet);
              local maxFlow = GetProperty(tag,"MAX_FLOW" )
              local CurveFormula = GetProperty(tag,"HEAD_FLOW_CURVE_FORMULA"  )
              local id = tag.."_flow_head_curve"
              local cindex= AddPumpCurve (id, maxFlow, CurveFormula, 10)
              ENsetlinkvalue(index, EN_C("EN_PUMP_HCURVE"), cindex);
          end
       end 
end

ENopenH();

local fittingTable = {}
local ftHeader = {}
table.insert(ftHeader, "Row")

for fittingTag in GetElementsByType("PIPE_FITTING") do
   table.insert(ftHeader, fittingTag)
end 
table.insert(fittingTable, ftHeader)

local i = 1
ENinitH(EN_C("EN_NOSAVE"));

while i<N do
      --[[Set nodal demand, initialize hydraulics, make a single period run, and retrieve pressure]]

      t= ENrunH();
      local tstep = ENnextH() ;
      print("tstep= "..tstep)
      local ftRow = {}
      table.insert(ftRow, i)

     for fittingTag in GetElementsByType("PIPE_FITTING") do
         table.insert(ftRow,  ENgetnodevalue(ENgetnodeindex(fittingTag), EN_C("EN_PRESSURE")))
     end 
     table.insert(fittingTable, ftRow)

      i = i + 1
end

    ENcloseH();
    printTable("Nodes pressures", fittingTable)
local filename ="Example "..now..".inp"
ENsaveinpfile(filename);
print("File: "..filename.." is saved in application local folder!")
